//>>built
define("epi-cms/widget/ContentTree",["dojo/_base/array","dojo/_base/connect","dojo/_base/declare","dojo/_base/lang","dojo/dom-class","dojo/dom-style","dojo/aspect","dojo/Deferred","dojo/Evented","dojo/keys","dojo/promise/all","dojo/query","dojo/sniff","dojo/when","epi/dependency","epi/shell/dnd/tree/dndSource","epi/shell/TypeDescriptorManager","epi/shell/widget/Tree","epi-cms/core/ContentReference","epi-cms/widget/_ContentTreeNode","epi-cms/widget/ContentTreeModelConfirmation","epi-cms/widget/ContentForestStoreModel"],function(_1,_2,_3,_4,_5,_6,_7,_8,_9,_a,_b,_c,_d,_e,_f,_10,_11,_12,_13,_14,_15,_16){return _3([_12,_9],{roots:null,expandExtraNodeItems:null,nodeConstructor:null,typeIdentifiers:null,allowManipulation:true,persist:false,expandOnDnd:true,showRoot:false,handleSelection:false,postMixInProperties:function(){this.inherited(arguments);if(!this.model){this.model=this._createTreeModel();}if(this.allowManipulation){this.dndController=_10;this.dndParams.push("accept");this.accept=this.model.containedTypes||this.containedTypes;}this.checkItemAcceptance=_4.hitch(this,this.checkItemAcceptance);this.nodeConstructor=this.nodeConstructor||_14;},getItemType:function(_17){return _11.getAndConcatenateValues(_17.typeIdentifier,"dndTypes");},buildRendering:function(){this.model=this._wrapModel(this.model);this.inherited(arguments);},_wrapModel:function(_18){return _15(this.model);},postCreate:function(){this.inherited(arguments);this.own(this.connect(this.model,"onSelect",_4.hitch(this,this._onSelect)),_7.before(this.model,"onToggleContentDisplay",_4.hitch(this,function(_19,_1a){var _1b=this.getNodesByItem(_19)[0];if(_1b){_6.set(_1b.domNode,{"display":_1a===true?"":"none"});}})));},onLoad:function(){this.inherited(arguments);return _e(this._expandRootNodes(),_4.hitch(this,this._expandExtraNodes));},_expandRootNodes:function(){var _1c=this.showRoot?[this.rootNode]:this.rootNode.getChildren();return _b(_1.map(_1c,this.tree._expandNode,this));},_expandExtraNodes:function(){if(!this.expandExtraNodeItems){return;}var _1d=this.expandExtraNodeItems instanceof Array?this.expandExtraNodeItems:[this.expandExtraNodeItems];var _1e=_1.map(_1d,function(_1f){return this.tree.getNodesByItem(_1f)[0];},this);_1e=_1.filter(_1e,Boolean);return _b(_1.map(_1e,this.tree._expandNode,this));},checkItemAcceptance:function(_20,_21,_22){var _23=true;var _24=dijit.getEnclosingWidget(_20),_25=_24&&_24.item;if(!_25){return false;}_21.forInSelectedItems(function(_26){if(!_23){return;}var _27=_26.data;if(_27.dndData){_27=_27.dndData;}_23=this.model.canPaste(_27,_25);},this);return _23;},_setAllowManipulationAttr:function(_28){this._set("allowManipulation",_28);if(_28){this.dndController=_10;}},_createTreeModel:function(){return new _16({roots:this.roots,typeIdentifiers:this.typeIdentifiers});},_onItemDelete:function(_29,_2a){function _2b(_2c,_2d){_1.forEach(_2c.getChildren(),function(_2e){_2d.push(_2e.item);_2b(_2e,_2d);});return _2d;};if(_2a){var _2f=this._itemNodesMap[this.model.getIdentity(_29)];if(_2f){_1.forEach(_2f,function(_30){_1.forEach(_2b(_30,[]).reverse(),function(_31){this._onItemDelete(_31);},this);},this);}}this.inherited(arguments);},_setTypeIdentifiersAttr:function(_32){this._set("typeIdentifiers",_32);if(this.model){this.model.typeIdentifiers=_32;}},buildNodeFromTemplate:function(_33){return new this.nodeConstructor(_33);},_createTreeNode:function(_34){var _35=_4.mixin({},_34,{dndData:_34.item});return this.buildNodeFromTemplate(_35);},getIconClass:function(_36,_37){if(!_36){return this.inherited(arguments);}var _38=_11.getValue(_36.typeIdentifier,"iconClass");if(this.model.isTypeOfRoot(_36)){return this.model.getObjectIconClass(_36,_38);}var _39=_11.getValue(_36.typeIdentifier,"supportsOpenCssClass");if(_37&&!_36.isSubRoot&&_39){_38=_38+"Open";}return _38;},focus:function(){this.focusNode(this.get("selectedNode")||this.rootNode);},_getTargetPath:function(_3a){var _3b=this.model,_3c=new _8();_3b.getAncestors(_3a,function(_3d){_3d.push(_3a);var _3e=_1.map(_3d,function(_3f){return _3b.getIdentity(_3f).toString();});if(typeof _3b.filterAncestors==="function"){_3e=_3b.filterAncestors(_3e);}_3c.resolve(_3e);});return _3c.promise;},_isValidTargetContent:function(_40){if(!_40){return false;}return !_40.isDeleted&&!_40.isWastebasket;},_onSelect:function(id,_41,_42){var _43=this.get("selectedNode");this.tree.model.set("previousContextualSelection",{"selectedContent":_43});this.selectContent(id,_41,true,_42).then(_4.hitch(this,function(){_43=this.get("selectedNode");if(_43&&_43.item&&_43.item.contentLink){this.emit("select",_43.item,_43);}}));},selectContent:function(_44,_45,_46,_47){var _48=this,_49=_48.model,_4a=new _8(),_4b=function(_4c){_48._preparePathNodes(_4c);_48._setRecursivePaths(_4c,_4a,_45,_47);};_e(_49.store.get(_44),function(_4d){if(!_48._isValidTargetContent(_4d)){_48.set("paths",[]);_4a.resolve(null);}else{_48._getTargetPath(_4d).then(function(_4e){_48._onSetTargetPath();_4b(_4e);});}});return _4a.promise;},_onSetTargetPath:function(){this.model.set("handleSelection",this.handleSelection);if(!this.handleSelection){return;}var _4f=this.get("selectedNode");if(_4f){_4f=this.getNodesByItem(_4f.item)[0];if(_4f){this.model.set("previousSelection",{selectedContent:_4f,selectedAncestors:_4f.getTreePath()});}}},_preparePathNodes:function(_50){},_setRecursivePaths:function(_51,_52,_53,_54){if(!_51||_51.length===0){return;}this.set("paths",[_51]).then(_4.hitch(this,function(){var _55=this.get("selectedNode");if(!_55){this._setRecursivePaths(_51.slice(0,-1),_52,_53,_54);return;}if(_53){this.focus();}if(_54){_54(_55);}_52.resolve(_55);},_52.reject));},_onKeyDown:function(_56,e){this.inherited(arguments);if(!this.allowManipulation){return;}if(_2.isCopyKey(e)){var _57=e.keyCode?String.fromCharCode(e.keyCode).toLowerCase():"";switch(_57){case "c":this.emit("copyOrCut",true);break;case "x":this.emit("copyOrCut",false);break;case "v":this.emit("paste");break;default:break;}}if(e.altKey||e.ctrlKey||e.shiftKey||e.metaKey){return;}if(e.keyCode==_a.DELETE){this.emit("delete");}},_onNodeMouseLeave:function(_58,evt){this.inherited(arguments);if(_d("ie")){_1.forEach(_c(".dijitTreeRow.dijitTreeRowHover",this.tree.domNode),function(_59){_5.remove(_59,"dijitTreeRowHover");});}}});});